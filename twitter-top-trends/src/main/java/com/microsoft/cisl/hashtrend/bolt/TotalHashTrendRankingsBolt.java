package com.microsoft.cisl.hashtrend.bolt;

import backtype.storm.task.OutputCollector;
import backtype.storm.tuple.Tuple;
import com.microsoft.cisl.hashtrend.window.Rankings;
import org.apache.log4j.Logger;

/**
 * @author  Panagiotis Garefalakis
 * @version 1.0
 * Created by pgaref on 8/1/16.
 *
 * This bolt merges incoming {@link Rankings}.
 * <p/>
 * It can be used to merge intermediate rankings generated by {@link IntermediateHashRankingsBolt} into a final,
 * consolidated ranking. To do so, configure this bolt with a globalGrouping on {@link IntermediateHashRankingsBolt}.
 */
public final class TotalHashTrendRankingsBolt extends AbstractRankerBolt {

    private static final long serialVersionUID = -8447525895532302198L;
    private static final Logger LOG = Logger.getLogger(TotalHashTrendRankingsBolt.class);

    public TotalHashTrendRankingsBolt() {
        super();
    }

    public TotalHashTrendRankingsBolt(int topN) {
        super(topN);
    }

    public TotalHashTrendRankingsBolt(int topN, int emitFrequencyInSeconds) {
        super(topN, emitFrequencyInSeconds);
    }

    @Override
    void updateRankingsWithTuple(Tuple tuple) {
        Rankings rankingsToBeMerged = (Rankings) tuple.getValue(0);
        super.getRankings().updateWith(rankingsToBeMerged);
        super.getRankings().pruneZeroCounts();
    }

    @Override
    void emitRankings(OutputCollector collector) {
        System.out.println("==========================\n" +
                    " Final Rankings: " + rankings.getRankings() +
                    "\n==========================");
    }


    @Override
    Logger getLogger() {
        return LOG;
    }

}

